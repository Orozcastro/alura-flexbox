/* ******************************* HEADER ********************************/
.headerPrincipal .container{
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.headerPrincipal-titulo {
    
}
.headerPrincipal-nav{
    display: flex;
}

/* ******************************* MAIN - Cursos ********************************/
.contenidoPrincipal{
    margin-bottom: 0;
}
.contenidoPrincipal-cursos{
    display: flex;
    flex-wrap: wrap;
    /* justify-content: center; */
}
.contenidoPrincipal-cursos-link{
    display: flex;
    width: 22%;
}

/* ******************************* VIDEO  ********************************/
.videoSobre .container{
    display: flex;
    justify-content: center;
    flex-direction: center;
    text-align: center;
}
.videoSobre-sobre{
    display: flex;
    flex-direction: column;
    /* flex-grow: 2; */
    /* justify-content: space-between; */
}
.videoSobre-video{
    /* flex-grow: 1; //hace que tome el espacio vacio */
    /* el elemento que no queremos que se reduzca */
    flex-shrink: 2;
}
.videoSobre-sobre-list{
    /* hace que el boton se mueva hacia abajo */
    flex-grow: 2;
}
/* ******************************* FOOTER ********************************/
.rodapePrincipal .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
}
/* mapa de cursos */
.rodapePrincipal-navMap {
    width: 100%;
}
.rodapePrincipal-navMap-list{
    display: flex;
    /* align-items: center; */
    justify-content: space-between;
}
.navMap-list-item {
    display: flex;
    flex-direction: column;
    width: 25%;
}


/* patrocinadores  */
.rodapePrincipal-patrocinadores-list{
    display: flex;
    align-items: center;
    justify-content: space-around;
    width: 75%;
    /* margin-right: 5%; */
}
.rodapePrincipal-contatoForm{
    width: 25%;
}
.rodapePrincipal-contatoForm-fieldset{
    display: flex;
}

/* ******************************* Responsiva - Mobile ********************************/
@media (max-width: 768px) {
    .headerPrincipal .container{
        flex-direction: column;
    }
    .headerPrincipal-nav{
        flex-direction: column;
        width: 100%;
        text-align: center;
    }
    .contenidoPrincipal-cursos{
        flex-direction: column;
    }
    .contenidoPrincipal-cursos-link{
        width: 100%;
    }


    .rodapePrincipal-navMap-list{
        justify-content: center;
    }
    .navMap-list-item{
        width: 100%;
    }
    /* video */
    .videoSobre .container{
        flex-direction: column;
    }
    .rodapePrincipal-navMap-list{
        flex-direction: column;
    }
    .rodapePrincipal-patrocinadores .container{
        flex-direction: column;
        justify-content: center;
    }
    .rodapePrincipal-contatoForm{
        display: flex;
        justify-content: center;

    }
    .headerPrincipal-nav-link-app{
        /* lo coloca al inicio de los link */
        order: -1; 
    }
}


/* ******************** APUNTES*9/
La propiedad flex-grow vista en el ejercicio anterior ayuda mucho si queremos que un elemento ocupe todo el ancho restante del flex container.
Por ejemplo, si tenemos:

Elemento 1: 200 px.
Elemento 2: 200 px.

Espacio vacío que restó del flex container: 600 px.
Total: 1000 px.
Se ponemos flex-grow: 1 en el primer elemento, este pasa a tener 800 px de ancho, es decir:
Espacio vacío + Elemento 1: 800 px.
Y el segundo elemento sigue teniendo 200 px de ancho.

Ahora, si ponemos flex-grow: 1 en ambos elementos, ¿Qué pasaría? ¿Cuál seria el tamaño del elemento 1? Y el elemento 2?
Lo que ocurriría es lo siguiente:

Considere el espacio vacío inicial: 600 px.
Como ambos elementos tienen flex-grow: 1, la suma de flex-grow que tenemos dará 1 + 1 = 2.
El navegador toma este espacio vacío y lo divide por el número de flex-grow que tenemos: 600 px : 2 = 300 px.
Ahora distribuye ese espacio a cada uno de los elementos que hemos colocado flex-grow.
Elemento 1: 300 px + 200 px = 500 px.
Elemento 2: 300 px + 200 px = 500 px. 


flex-basis: 30%;  // simpre va a mantener ese width de 30% sin importar cuanto midan los demas items

 flex: 1 1 300px;
El orden de los valores es: flex-grow, flex-shrink, flex-basis.

*/